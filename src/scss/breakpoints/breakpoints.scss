// Breakpoints
//
// The old approach seems to increase the size of the final CSS file generated.
// See the plugin at http://include-media.com
//
// Now we try to replicate the plugin functionality with simple code.

// Use aliases if possible instead of breakpoints
$breakpoints: (
	'tablet': 768px,
	'small-desktop': 1024px,
	'large-desktop': 1280px
);

// Aliases
// - Wherever possible use aliases
// - Usage: @include media($small...)
// - !!! watch out for the three dots next to the variable name in the mixin call
$small: '<tablet';
$tablet: '>=tablet', '<small-desktop';
$medium: '>=small-desktop', '<=large-desktop';
$large: '>large-desktop';

// Once the breakpoints / aliases updated these should be too
$queries: ( // x16px
	'<tablet': (
		max-width: 47.9375em
	),
	'<=tablet': (
		max-width: 48em
	),
	'>tablet': (
		min-width: 48.0625em
	),
	'>=tablet': (
		min-width: 48em
	),
	'<small-desktop': (
		max-width: 63.9375em
	),
	'<=small-desktop': (
		max-width: 64em
	),
	'>small-desktop': (
		min-width: 64.0625em
	),
	'>=small-desktop': (
		min-width: 64em
	),
	'<large-desktop': (
		max-width: 79.9375em
	),
	'<=large-desktop': (
		max-width: 80em
	),
	'>large-desktop': (
		min-width: 80.0625em
	),
	'>=large-desktop': (
		min-width: 80em
	)
);

@mixin media($conditions...) {
	$query: '';
	$index: 0;

	@each $condition in $conditions {
		$q: map-get($queries, $condition);
		$query: '#{$query}#{$q}';
		$index: $index + 1;

		@if ($index < length($conditions)) {
			$query: $query + ' and ';
		}
	}

	@media #{unquote($query)} {
		@content;
	}
}
